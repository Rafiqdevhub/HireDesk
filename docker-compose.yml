version: "3.8"

services:
  # Main HireDesk Application
  hiredesk:
    image: rafiq9323/hiredesk:latest
    container_name: hiredesk-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=https://jobpsych-payment.vercel.app/api
      - VITE_APP_NAME=HireDesk
      - VITE_APP_VERSION=1.0.0
      - VITE_ENABLE_SOCIAL_LOGIN=true
      - VITE_ENABLE_FILE_UPLOAD=true
      - VITE_DEV_MODE=false
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - hiredesk-network

  # Development version with hot reload
  hiredesk-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: hiredesk-dev
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:5000/api
      - VITE_APP_NAME=HireDesk-Dev
      - VITE_APP_VERSION=1.0.0-dev
      - VITE_ENABLE_SOCIAL_LOGIN=true
      - VITE_ENABLE_FILE_UPLOAD=true
      - VITE_DEV_MODE=true
    command: npm run dev
    profiles:
      - dev
    networks:
      - hiredesk-network

  # Mock Backend Service (for development)
  mock-backend:
    image: node:20-alpine
    container_name: hiredesk-mock-backend
    ports:
      - "5000:5000"
    volumes:
      - ./mock-backend:/app
    working_dir: /app
    command: npm start
    environment:
      - NODE_ENV=development
      - PORT=5000
    profiles:
      - dev
    networks:
      - hiredesk-network
    depends_on:
      - hiredesk-dev

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: hiredesk-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    profiles:
      - full
    networks:
      - hiredesk-network

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: hiredesk-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - hiredesk
    profiles:
      - prod
    networks:
      - hiredesk-network

  # PostgreSQL Database (if needed for future features)
  postgres:
    image: postgres:15-alpine
    container_name: hiredesk-postgres
    environment:
      - POSTGRES_DB=hiredesk
      - POSTGRES_USER=hiredesk_user
      - POSTGRES_PASSWORD=hiredesk_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    profiles:
      - full
    networks:
      - hiredesk-network

volumes:
  redis_data:
  postgres_data:
  nginx_logs:

networks:
  hiredesk-network:
    driver: bridge
    name: hiredesk-network
